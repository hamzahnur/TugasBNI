// <auto-generated />
using System;
using API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Models.Account", b =>
                {
                    b.Property<string>("IdCustomer")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCustomer");

                    b.ToTable("Tb_M_Account");
                });

            modelBuilder.Entity("API.Models.Customer", b =>
                {
                    b.Property<string>("IdCustomer")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("IdCustomer");

                    b.HasIndex("RoleID");

                    b.ToTable("Tb_M_Customer");
                });

            modelBuilder.Entity("API.Models.Item", b =>
                {
                    b.Property<string>("IdItem")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Stok")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdItem");

                    b.ToTable("Tb_M_Item");
                });

            modelBuilder.Entity("API.Models.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Tb_M_Role");
                });

            modelBuilder.Entity("API.Models.Transcation", b =>
                {
                    b.Property<string>("IdTransaction")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateTranscation")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCustomer")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdItem")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("TotalCost")
                        .HasColumnType("int");

                    b.HasKey("IdTransaction");

                    b.HasIndex("IdCustomer");

                    b.HasIndex("IdItem");

                    b.ToTable("Tb_T_Transcation");
                });

            modelBuilder.Entity("API.Models.Account", b =>
                {
                    b.HasOne("API.Models.Customer", "Customer")
                        .WithOne("Account")
                        .HasForeignKey("API.Models.Account", "IdCustomer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("API.Models.Customer", b =>
                {
                    b.HasOne("API.Models.Role", "Role")
                        .WithMany("Customers")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("API.Models.Transcation", b =>
                {
                    b.HasOne("API.Models.Customer", "Customer")
                        .WithMany("Transcations")
                        .HasForeignKey("IdCustomer")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("API.Models.Item", "Item")
                        .WithMany("Transcations")
                        .HasForeignKey("IdItem")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Customer");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("API.Models.Customer", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("Transcations");
                });

            modelBuilder.Entity("API.Models.Item", b =>
                {
                    b.Navigation("Transcations");
                });

            modelBuilder.Entity("API.Models.Role", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
